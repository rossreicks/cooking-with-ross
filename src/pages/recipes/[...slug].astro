---
import "../../styles/recipe.css";
import { getCollection } from 'astro:content';

// Generate the paths for each recipe based on its slug
export async function getStaticPaths() {
  const recipes = await getCollection('recipes');
  return recipes.map((recipe) => ({
    params: { slug: recipe.slug },
  }));
}

// Get the collection of recipes to match the current route's slug
const recipes = await getCollection('recipes');
const recipe = recipes.find((r) => r.slug === Astro.params.slug);

if (!recipe) {
  throw new Error(`Recipe not found for slug: ${Astro.params.slug}`);
}

const { Content } = await recipe.render();

const { title, prep_time, cook_time, tags, servings } = recipe.data;
---

<html lang="en">
	<head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>{title}</title>
	</head>
	<body class="bg-gray-50 min-h-screen">
		<header class="bg-white shadow-md p-4">
			<div class="max-w-3xl mx-auto flex justify-between items-center">
				<a href="/" class="text-2xl font-bold text-blue-600"
					>Cooking with Ross</a
				>
			</div>
		</header>
		<div class="max-w-2xl mx-auto p-6">
			<h1 class="text-4xl font-bold text-gray-800 mb-2">{title}</h1>
            <p class="text-lg text-gray-600 mb-6 flex flex-col sm:flex-row sm:divide-x sm:divide-gray-400 md:text-center text-left">
                <span class='sm:pr-4'>Prep Time: {prep_time}</span>
                <span class='sm:px-4'>Cook Time: {cook_time}</span>
                <span class='sm:pl-4'>Servings: {servings}</span>
			</p>

            <Content />

			<h3>Tags</h3>
			<ul>
				{tags.map((tag) => <li>{tag}</li>)}
			</ul>
		</div>
	</body>
</html>

